homeassistant:
  name: !secret home_name
  # "Localization"
  unit_system: imperial
  # Location, used for sunrise/sunset etc
  latitude: !secret latitude
  longitude: !secret longitude
  elevation: !secret altitude
  time_zone: !secret time_zone
  # Customizations, I've split mine into separate files by category
  customize: !include_dir_merge_named customizations
  # Remember that "trusted_networks" bypasses TOTP
  auth_providers:
    - type: homeassistant
    - type: trusted_networks
      trusted_networks:
        - !secret lannetwork
  # Using Time-based One Time Passwords for additional security
  auth_mfa_modules:
   - type: totp
##########################
##      NAV PANELS      ##
##########################
# Can't get rid of the 'config' panel or you hinder your ability to manage
# Home Assistant!
config:
#___________________#
# The map was not useful to me in it's current state, because it zooms out to
# include ALL zones, which isn't very informative.
# map:
# Logbook just took ages to load for the information it provided.
# Really just useful in debugging.
# logbook: !include logbook.yaml
#___________________#
### Custom Panels ###
# Was using custom panels to give access to both Node Red (for automations) and
# Cloud9 IDE (for editing the config), but I can't limit them to only Admin users.
# Until that happens, I do not have them listed as panels.
# panel_iframe:
# cloud9:
#   title: 'Config Editor'
#   url: !secret editor_url
#   icon: 'mdi:pencil'
# nodered:
#   title: 'Node Red'
#   url: !secret node_red_url
#   icon: 'mdi:arrow-decision'
##########################
##        HTTP          ##
##########################
http:
  base_url: !secret hass_url
  # We don't need to encrypt here because all traffic goes through a proxy
  # providing the HTTPS. Nothing accesses Home Assistant except via the proxy
  # (besides other Docker Containers).
# server_port: 443
# ssl_certificate: !secret cert_loc
# ssl_key: !secret key_loc
  # I have Traefik configured to use x_forwarded_for to put the originating IP.
  # Mostly it's useless though, because I also proxy via Cloudflare for public
  # connections.
  use_x_forwarded_for: True
  trusted_proxies:
    - 127.0.0.1
    - ::1
    - !secret proxyip
  # Fun story, I accidentally banned my proxy once.. that was a facepalm
  ip_ban_enabled: True
  login_attempts_threshold: 3

##########################
##       NEST           ##
##########################
# nest:
#     client_id: !secret nest_id
#     client_secret: !secret nest_secret
##########################
##       TTS            ##
##########################
# I have to specify the 'https' url for hass otherwise the generated TTS links
# will try and use http://hass_url:8123/ instead (which doesn't work!)
tts:
  - platform: google_translate
    service_name: google_say
    base_url: !secret https_hass_url
# ##########################
##  GOOGLE CALENDAR     ##
##########################
# Using specific key-words for events you want Home Assistant to
# react to is great. I haven't quite tied it into actual events
# yet.
google:
  client_id: !secret gcp_oauth_client_id
  client_secret: !secret gcp_oauth_client_secret
##########################
##    NOTIFICATIONS     ##
##########################
notify:
  # Probably the most used copmonent. I have a channel that gets all
  # door events, zone changes, camera motion events, and flight updates
  # sent to it. Also, when Node Red makes an automation trigger, it
  # sends a message to the channel as well, letting me know it did something
  # on my behalf.
  - platform: discord
    token: !secret discord_bot_token
    name: Discord Notify
##########################
##    DEVICE TRACKER    ##
##########################
device_tracker:
  # I have a couple Unifi Switches and Unifi APs. I run a Unifi
  # Controller in a Docker Container and because all my devices are either
  # plugged into a switch or connected to Wi-Fi, I get a complete
  # view of my network using this device_tracker. The only annoying bit
  # is the urllib3 spam about not verifying SSL, but I use Traefik to proxy
  # any non-container access to the controller, so it seemed like a waste of
  # time to put valid certificates on the controller.
  # - platform: unifi
  #   host: !secret unifi_ip
  #   username: !secret unifi_user
  #   password: !secret unifi_password
  #   verify_ssl: false
  #   new_device_defaults:
  #     track_new_devices: False
  #     hide_if_away: True

##########################
##      updates         ##
##########################
# The updater is enabled by default. I just kept it.
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  include_used_components: true
##########################
##      logger          ##
##########################
# Sometimes I have to change it to info or debug when trying to fix something.
logger:
  default: warn
##########################
##      INCLUDES        ##
##########################
# I broke out anything with more than like 5 configurations into separate files.
# Both for ease of editing and debugging (simply move the file out of the folder
# to have Home Assistant ignore it).
binary_sensor: !include_dir_merge_list  binary_sensors
camera: !include_dir_merge_list cameras
cloud: !include cloud.yaml
group: !include_dir_merge_named groups
frontend: !include frontend.yaml
light: !include_dir_merge_list lights
sensor: !include_dir_merge_list sensors
zone: !include_dir_merge_list zones
switch: !include switches.yaml
# image_processing: !include_dir_merge_list tensorflow
script: !include scripts.yaml
