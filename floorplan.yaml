      name: Edgewood Floorplan
      image: /local/custom_ui/floorplan/floorplan.svg
      stylesheet: /local/custom_ui/floorplan/floorplan.css

      # These options are optional
      warnings:                  # enable warnings (to find out why things might ot be working correctly)
      # pan_zoom:                  # enable experimental panning / zooming
      # hide_app_toolbar:          # hide the application toolbar (when used as a custom panel)
      # date_format: DD-MMM-YYYY   # Date format to use in hover-over text

      last_motion_entity: sensor.template_last_motion
      last_motion_class: last-motion

      groups:

        - name: Indoor Temperatur
          entities:
             -  sensor.living_room_thermostat_temperature
             -  sensor.network_rack_temperature
             -  sensor.recroom_temperature_sink
             -  sensor.laundry_room_temperature
             -  sensor.averys_room_temperature
             -  sensor.guest_bathroom_temperature
             -  sensor.guest_room_temperature
             -  sensor.master_bedroom_temperature
             -  sensor.kams_desk_temperature
             -  sensor.kitchen_temperature
             -  sensor.recroom_temperature_southwall
          #text_template: '${entity.state ? entity.state : "unknown"}'
          # An example of rounding up a number, i.e. a temperature of 90.1 becomes 91
          text_template: '${entity.state ? Math.ceil(entity.state) : "??"}°F'
          class_template: '
            var temp = parseFloat(entity.state.replace("°", ""));
            if (temp < 60)
              return "lightblue";
            else if (temp < 70)
              return "neutral";
            else if (temp < 78)
              return "orange";
            else if (isNaN(Math.ceil(temp)))
              return "clear";
            else
              return "red";
            '
        - name: Sensors
          entities:
             -  sensor.dark_sky_temperature
          text_template: '${entity.state ? Math.ceil(entity.state) : "??"}°F'
          
        - name: Doors
          entities:
            - binary_sensor.front_door
            - binary_sensor.rec_room_door
            - binary_sensor.back_door
          states:
            - state: 'on'
              class: 'red'
            - state: 'off'
              class: 'green'

        - name: Lights
          entities:
             - light.bedroom_bed_lights
             - light.bedroom_room_lights
             - light.recroom_walls
             - light.recroom_table
             - switch.recroom_ceiling
             - switch.recroom_corner
             - switch.laundry_room
          states:
            - state: 'on'
              class: 'yellow'
            - state: 'off'
              class: 'gray'
          action:
            domain: homeassistant   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
            service: toggle
        - name: Christmas Lights
          entities:
             - switch.tplink_switch_1
             - switch.tplink_switch_2
          states:
            - state: 'on'
              class: 'green'
            - state: 'off'
              class: 'gray'
          action:
            domain: homeassistant   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
            service: toggle

        # - name: Switches
        #   entities:
        #     - switch.doorbell
        #   states:
        #     - state: 'on'
        #       class: 'doorbell-on'
        #     - state: 'off'
        #       class: 'doorbell-off'

        # - name: NVR
        #   entities:
        #     - binary_sensor.blue_iris_nvr
        #   text_template: '${(entity.state === "on") ? "online" : "offline"}'
        #   states:
        #     - state: 'off'
        #       class: 'danger-text'
        #     - state: 'on'
        #       class: 'success-text'

        # - name: Alarm Panel
        #   entities:
        #     - alarm_control_panel.alarm
        #   states:
        #     - state: 'armed_away'
        #       class: 'alarm-armed'
        #     - state: 'armed_home'
        #       class: 'alarm-armed'
        #     - state: 'disarmed'
        #       class: 'alarm-disarmed'

        # - name: Binary sensors
        #   entities:
        #     - binary_sensor.front_hallway
        #     - binary_sensor.kitchen
        #     - binary_sensor.master_bedroom
        #     - binary_sensor.theatre_room
        #   states:
        #     - state: 'off'
        #       class: 'info-background'
        #     - state: 'on'
        #       class: 'warning-background'
        #   state_transitions:
        #     - name: On to off
        #       from_state: 'on'
        #       to_state: 'off'
        #       duration: 10

        # - name: Cameras
        #   entities:
        #     - camera.hallway
        #     - camera.driveway
        #     - camera.front_door
        #     - camera.backyard
        #   states:
        #     - state: 'idle'
        #       class: 'camera-idle'

#        - name: thermostat_temp
#          entities:
#            - climate.downstairs
#            - climate.upstairs
#          text_template: '${entity.attributes.current_temperature ? entity.attributes.current_temperature : "undefined"}'
#
# The above text_template uses extended attributes from the climate.* objects to get current temperature.

#        - name: text_states
#          entities:
#            - sensor.downstairs_thermostat_humidity
#            - sensor.dark_sky_temperature
#            - sensor.last_message
#          text_template: '${entity.state ? entity.state.replace(/\s{2,}/g,"") : "undefined"}'
#
# The above text_template uses jQuery syntax to search and replace any instance of 2 consecutive (or more) spaces in a string of text.
